// Generated by gencpp from file gazebo_controller/position.msg
// DO NOT EDIT!


#ifndef GAZEBO_CONTROLLER_MESSAGE_POSITION_H
#define GAZEBO_CONTROLLER_MESSAGE_POSITION_H

#include <ros/service_traits.h>


#include <gazebo_controller/positionRequest.h>
#include <gazebo_controller/positionResponse.h>


namespace gazebo_controller
{

struct position
{

typedef positionRequest Request;
typedef positionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct position
} // namespace gazebo_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gazebo_controller::position > {
  static const char* value()
  {
    return "2229c59db5587a6b78cff67ff633281e";
  }

  static const char* value(const ::gazebo_controller::position&) { return value(); }
};

template<>
struct DataType< ::gazebo_controller::position > {
  static const char* value()
  {
    return "gazebo_controller/position";
  }

  static const char* value(const ::gazebo_controller::position&) { return value(); }
};


// service_traits::MD5Sum< ::gazebo_controller::positionRequest> should match 
// service_traits::MD5Sum< ::gazebo_controller::position > 
template<>
struct MD5Sum< ::gazebo_controller::positionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gazebo_controller::position >::value();
  }
  static const char* value(const ::gazebo_controller::positionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gazebo_controller::positionRequest> should match 
// service_traits::DataType< ::gazebo_controller::position > 
template<>
struct DataType< ::gazebo_controller::positionRequest>
{
  static const char* value()
  {
    return DataType< ::gazebo_controller::position >::value();
  }
  static const char* value(const ::gazebo_controller::positionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gazebo_controller::positionResponse> should match 
// service_traits::MD5Sum< ::gazebo_controller::position > 
template<>
struct MD5Sum< ::gazebo_controller::positionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gazebo_controller::position >::value();
  }
  static const char* value(const ::gazebo_controller::positionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gazebo_controller::positionResponse> should match 
// service_traits::DataType< ::gazebo_controller::position > 
template<>
struct DataType< ::gazebo_controller::positionResponse>
{
  static const char* value()
  {
    return DataType< ::gazebo_controller::position >::value();
  }
  static const char* value(const ::gazebo_controller::positionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GAZEBO_CONTROLLER_MESSAGE_POSITION_H
